# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # TAMBAHAN: Replace API keys sebelum deploy
      - name: Replace API Keys
        run: |
          echo "Replacing API keys in all files:"
          find . -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -exec sed -i 's/YOUR_FIREBASE_API_KEY_PLACEHOLDER/${{ secrets.API_KEY_FIREBASE }}/g' {} \;
          find . -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -exec sed -i 's/YOUR_GEMINI_API_KEY_PLACEHOLDER/${{ secrets.API_KEY_GEMINI }}/g' {} \;
          
          echo "Final verification:"
                    find . -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" \) -exec grep -l "PLACEHOLDER" {} \; || echo "All placeholders replaced successfully"

                      - name: Debug Environment
                        run: |
                          echo "GitHub Actor: ${{ github.actor }}"
                          echo "Repository: ${{ github.repository }}"
                          echo "Checking if secrets are available..."
                          if [ -z "${{ secrets.API_KEY_FIREBASE }}" ]; then
                            echo "ERROR: API_KEY_FIREBASE secret is not set!"
                          else
                            echo "SUCCESS: API_KEY_FIREBASE secret is available"
                          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
